"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IosProject = void 0;
var IosProject = /** @class */ (function () {
    function IosProject() {
    }
    IosProject.getViewController = function (domain) {
        return "//\n//  ViewController.swift\n//  proshake\n//\n//  Created by Jianzhi.wang on 2023/7/9.\n//\nimport SnapKit\nimport UIKit\nimport Glitter_IOS\nimport FirebaseMessaging\nclass ViewController: UIViewController {\n    \n    public static var vc:ViewController? = nil\n    public static var redirect:String = \"\"\n    public let webView = GlitterActivity.create(glitterConfig: GlitterActivity.GlitterConfig(parameters:\"?a=1\",projectRout: URL(string: \"".concat(domain, "/index-app\")! )).initWkWebView()\n    \n    override func viewDidLoad() {\n        webView.webView!.allowsBackForwardNavigationGestures = true;\n        NotificationCenter.default.addObserver(self, selector: #selector(keyBoardWillShow(notification:)), name: UIResponder.keyboardWillShowNotification, object: nil)\n        NotificationCenter.default.addObserver(self, selector: #selector(keyBoardWillHide(notification:)), name: UIResponder.keyboardWillHideNotification, object: nil)\n        ViewController.vc=self\n        if(ViewController.redirect != \"\"){\n            webView.webView!.evaluateJavaScript(\"\"\"\nlocation.href=new URL(\"(ViewController.redirect)\",location.href)\n\"\"\")\n        }\n        self.view.backgroundColor = .white\n        super.viewDidLoad()\n    }\n \n    override func viewWillAppear(_ animated: Bool) {\n        self.view.addSubview(self.webView.view)\n    }\n    \n    @objc func keyBoardWillShow(notification: NSNotification) {\n        print(\"keyBoardWillShow\")\n    }\n    \n    @objc func keyBoardWillHide(notification: NSNotification) {\n        print(\"keyBoardWillHide\")\n        self.addChild(viewController: webView,to: view)\n    }\n    \n}\n\nextension UIViewController {\n    func addChild(viewController: UIViewController, to view: UIView) {\n        addChild(viewController)\n        view.addSubview(viewController.view)\n        viewController.view.snp.makeConstraints { make in\n            make.edges.equalToSuperview()\n        }\n        viewController.didMove(toParent: self)\n    }\n    \n    func addChild_noconstraints(viewController: UIViewController, to view: UIView) {\n        addChild(viewController)\n        view.addSubview(viewController.view)\n        viewController.didMove(toParent: self)\n    }\n    \n    func removeChild(child: UIViewController) {\n        child.willMove(toParent: nil)\n        child.view.removeFromSuperview()\n        child.removeFromParent()\n    }\n}\n\n");
    };
    return IosProject;
}());
exports.IosProject = IosProject;
