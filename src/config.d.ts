export declare class ConfigSetting {
    static get is_local(): boolean;
    static runSchedule: boolean;
    static config_path: string;
    static setConfig(envPath: string): void;
}
export declare let saasConfig: {
    readonly SAAS_NAME: string | undefined;
    readonly DEF_DEADLINE: number;
};
export declare const config: {
    readonly domain: string | undefined;
    SECRET_KEY: string;
    API_PREFIX: string;
    API_PUBLIC_PREFIX: string;
    PARAMS_NEED_ENCRYPT_IN_LOG: string[];
    PWD_SALT_ROUND: number;
    LOG_PATH: string;
    readonly DB_CONN_LIMIT: number;
    readonly DB_QUEUE_LIMIT: number;
    DB_SHOW_INFO: boolean;
    readonly SNSAccount: string | undefined;
    readonly SNSPWD: string | undefined;
    readonly SNS_URL: string | undefined;
    readonly DB_URL: string | undefined;
    DB_PORT: number;
    readonly DB_USER: string | undefined;
    readonly DB_PWD: string | undefined;
    readonly DB_NAME: string | undefined;
    readonly REDIS_URL: string | undefined;
    readonly REDIS_PORT: string | undefined;
    readonly REDIS_PWD: string | undefined;
    readonly AWS_S3_NAME: string | undefined;
    readonly AWS_ACCESS_KEY: string | undefined;
    readonly AWS_SecretAccessKey: string | undefined;
    readonly AWS_HostedZoneId: string | undefined;
    readonly HostedDomain: string | undefined;
    readonly sshIP: string | undefined;
    readonly AWS_S3_PREFIX_DOMAIN_NAME: string;
    readonly SINGLE_TYPE: boolean;
    getRoute: (r: string, type?: "public" | "normal") => string;
    public_route: {
        user: string;
        invoice: string;
        sql_api: string;
        post: string;
        chat: string;
        smtp: string;
        fcm: string;
        lambda: string;
        ec: string;
        oauth: string;
        manager: string;
        app: string;
        wallet: string;
        article: string;
        delivery: string;
        rebate: string;
        recommend: string;
        graph_api: string;
        track: string;
        ai_chat: string;
        sms: string;
        line_message: string;
        fb_message: string;
        ai_points: string;
        sms_points: string;
        stock: string;
        shopee: string;
        customer_sessions: string;
        voucher: string;
        reconciliation: string;
        fb: string;
        progress: string;
    };
    route: {
        shopee: string;
        line_message: string;
        user: string;
        template: string;
        app: string;
        page: string;
        fileManager: string;
        private: string;
        ai: string;
        globalEvent: string;
        backendServer: string;
    };
};
export default config;
