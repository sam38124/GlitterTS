import TinyEmitter from"tiny-emitter";import parallel from"array-parallel";import Point from"./point";import Rect from"./rect";import ShuffleItem from"./shuffle-item";import Classes from"./classes";import getNumberStyle from"./get-number-style";import sorter from"./sorter";import{onTransitionEnd,cancelTransitionEnd}from"./on-transition-end";import{getItemPosition,getColumnSpan,getAvailablePositions,getShortColumn,getCenteredPositions}from"./layout";import arrayMax from"./array-max";import hyphenate from"./hyphenate";function arrayUnique(x){return Array.from(new Set(x))}let id=0;class Shuffle extends TinyEmitter{constructor(element,options={}){super();this.options={...Shuffle.options,...options};this.lastSort={};this.group=Shuffle.ALL_ITEMS;this.lastFilter=Shuffle.ALL_ITEMS;this.isEnabled=true;this.isDestroyed=false;this.isInitialized=false;this._transitions=[];this.isTransitioning=false;this._queue=[];const el=this._getElementOption(element);if(!el){throw new TypeError("Shuffle needs to be initialized with an element.")}this.element=el;this.id="shuffle_"+id;id+=1;this._init();this.isInitialized=true}_init(){this.items=this._getItems();this.sortedItems=this.items;this.options.sizer=this._getElementOption(this.options.sizer);this.element.classList.add(Shuffle.Classes.BASE);this._initItems(this.items);if(document.readyState!=="complete"){const layout=this.layout.bind(this);window.addEventListener("load",(function onLoad(){window.removeEventListener("load",onLoad);layout()}))}const containerCss=window.getComputedStyle(this.element,null);const containerWidth=Shuffle.getSize(this.element).width;this._validateStyles(containerCss);this._setColumns(containerWidth);this.filter(this.options.group,this.options.initialSort);this._rafId=null;if("ResizeObserver"in window){this._resizeObserver=new ResizeObserver(this._handleResizeCallback.bind(this));this._resizeObserver.observe(this.element)}this.element.offsetWidth;this.setItemTransitions(this.items);this.element.style.transition=`height ${this.options.speed}ms ${this.options.easing}`}_getElementOption(option){if(typeof option==="string"){return this.element.querySelector(option)}if(option&&option.nodeType&&option.nodeType===1){return option}if(option&&option.jquery){return option[0]}return null}_validateStyles(styles){if(styles.position==="static"){this.element.style.position="relative"}if(styles.overflow!=="hidden"){this.element.style.overflow="hidden"}}_filter(category=this.lastFilter,collection=this.items){const set=this._getFilteredSets(category,collection);this._toggleFilterClasses(set);this.lastFilter=category;if(typeof category==="string"){this.group=category}return set}_getFilteredSets(category,items){let visible=[];const hidden=[];if(category===Shuffle.ALL_ITEMS){visible=items}else{items.forEach((item=>{if(this._doesPassFilter(category,item.element)){visible.push(item)}else{hidden.push(item)}}))}return{visible:visible,hidden:hidden}}_doesPassFilter(category,element){if(typeof category==="function"){return category.call(element,element,this)}const attr=element.dataset[Shuffle.FILTER_ATTRIBUTE_KEY];const keys=this.options.delimiter?attr.split(this.options.delimiter):JSON.parse(attr);function testCategory(category){return keys.includes(category)}if(Array.isArray(category)){if(this.options.filterMode===Shuffle.FilterMode.ANY){return category.some(testCategory)}return category.every(testCategory)}return keys.includes(category)}_toggleFilterClasses({visible:visible,hidden:hidden}){visible.forEach((item=>{item.show()}));hidden.forEach((item=>{item.hide()}))}_initItems(items){items.forEach((item=>{item.init()}))}_disposeItems(items){items.forEach((item=>{item.dispose()}))}_updateItemCount(){this.visibleItems=this._getFilteredItems().length}setItemTransitions(items){const{speed:speed,easing:easing}=this.options;const positionProps=this.options.useTransforms?["transform"]:["top","left"];const cssProps=Object.keys(ShuffleItem.Css.HIDDEN.before).map((k=>hyphenate(k)));const properties=positionProps.concat(cssProps).join();items.forEach((item=>{item.element.style.transitionDuration=speed+"ms";item.element.style.transitionTimingFunction=easing;item.element.style.transitionProperty=properties}))}_getItems(){return Array.from(this.element.children).filter((el=>el.matches(this.options.itemSelector))).map((el=>new ShuffleItem(el,this.options.isRTL)))}_mergeNewItems(items){const children=Array.from(this.element.children);return sorter(this.items.concat(items),{by(element){return children.indexOf(element)}})}_getFilteredItems(){return this.items.filter((item=>item.isVisible))}_getConcealedItems(){return this.items.filter((item=>!item.isVisible))}_getColumnSize(containerWidth,gutterSize){let size;if(typeof this.options.columnWidth==="function"){size=this.options.columnWidth(containerWidth)}else if(this.options.sizer){size=Shuffle.getSize(this.options.sizer).width}else if(this.options.columnWidth){size=this.options.columnWidth}else if(this.items.length>0){size=Shuffle.getSize(this.items[0].element,true).width}else{size=containerWidth}if(size===0){size=containerWidth}return size+gutterSize}_getGutterSize(containerWidth){let size;if(typeof this.options.gutterWidth==="function"){size=this.options.gutterWidth(containerWidth)}else if(this.options.sizer){size=getNumberStyle(this.options.sizer,"marginLeft")}else{size=this.options.gutterWidth}return size}_setColumns(containerWidth=Shuffle.getSize(this.element).width){const gutter=this._getGutterSize(containerWidth);const columnWidth=this._getColumnSize(containerWidth,gutter);let calculatedColumns=(containerWidth+gutter)/columnWidth;if(Math.abs(Math.round(calculatedColumns)-calculatedColumns)<this.options.columnThreshold){calculatedColumns=Math.round(calculatedColumns)}this.cols=Math.max(Math.floor(calculatedColumns||0),1);this.containerWidth=containerWidth;this.colWidth=columnWidth}_setContainerSize(){this.element.style.height=this._getContainerSize()+"px"}_getContainerSize(){return arrayMax(this.positions)}_getStaggerAmount(index){return Math.min(index*this.options.staggerAmount,this.options.staggerAmountMax)}_dispatch(name,data={}){if(this.isDestroyed){return}data.shuffle=this;this.emit(name,data)}_resetCols(){let i=this.cols;this.positions=[];while(i){i-=1;this.positions.push(0)}}_layout(items){const itemPositions=this._getNextPositions(items);let count=0;items.forEach(((item,i)=>{function callback(){item.applyCss(ShuffleItem.Css.VISIBLE.after)}if(Point.equals(item.point,itemPositions[i])&&!item.isHidden){item.applyCss(ShuffleItem.Css.VISIBLE.before);callback();return}item.point=itemPositions[i];item.scale=ShuffleItem.Scale.VISIBLE;item.isHidden=false;const styles=this.getStylesForTransition(item,ShuffleItem.Css.VISIBLE.before);styles.transitionDelay=this._getStaggerAmount(count)+"ms";this._queue.push({item:item,styles:styles,callback:callback});count+=1}))}_getNextPositions(items){if(this.options.isCentered){const itemsData=items.map(((item,i)=>{const itemSize=Shuffle.getSize(item.element,true);const point=this._getItemPosition(itemSize);return new Rect(point.x,point.y,itemSize.width,itemSize.height,i)}));return this.getTransformedPositions(itemsData,this.containerWidth)}return items.map((item=>this._getItemPosition(Shuffle.getSize(item.element,true))))}_getItemPosition(itemSize){return getItemPosition({itemSize:itemSize,positions:this.positions,gridSize:this.colWidth,total:this.cols,threshold:this.options.columnThreshold,buffer:this.options.buffer})}getTransformedPositions(itemRects,containerWidth){return getCenteredPositions(itemRects,containerWidth)}_shrink(collection=this._getConcealedItems()){let count=0;collection.forEach((item=>{function callback(){item.applyCss(ShuffleItem.Css.HIDDEN.after)}if(item.isHidden){item.applyCss(ShuffleItem.Css.HIDDEN.before);callback();return}item.scale=ShuffleItem.Scale.HIDDEN;item.isHidden=true;const styles=this.getStylesForTransition(item,ShuffleItem.Css.HIDDEN.before);styles.transitionDelay=this._getStaggerAmount(count)+"ms";this._queue.push({item:item,styles:styles,callback:callback});count+=1}))}_handleResizeCallback(entries){if(!this.isEnabled||this.isDestroyed){return}for(const entry of entries){if(Math.round(entry.contentRect.width)!==Math.round(this.containerWidth)){cancelAnimationFrame(this._rafId);this._rafId=requestAnimationFrame(this.update.bind(this))}}}getStylesForTransition(item,styleObject){const styles={...styleObject};if(this.options.useTransforms){const sign=this.options.isRTL?"-":"";const x=this.options.roundTransforms?Math.round(item.point.x):item.point.x;const y=this.options.roundTransforms?Math.round(item.point.y):item.point.y;styles.transform=`translate(${sign}${x}px, ${y}px) scale(${item.scale})`}else{if(this.options.isRTL){styles.right=item.point.x+"px"}else{styles.left=item.point.x+"px"}styles.top=item.point.y+"px"}return styles}_whenTransitionDone(element,itemCallback,done){const id=onTransitionEnd(element,(evt=>{itemCallback();done(null,evt)}));this._transitions.push(id)}_getTransitionFunction(opts){return done=>{opts.item.applyCss(opts.styles);this._whenTransitionDone(opts.item.element,opts.callback,done)}}_processQueue(){if(this.isTransitioning){this._cancelMovement()}const hasSpeed=this.options.speed>0;const hasQueue=this._queue.length>0;if(hasQueue&&hasSpeed&&this.isInitialized){this._startTransitions(this._queue)}else if(hasQueue){this._styleImmediately(this._queue);this._dispatch(Shuffle.EventType.LAYOUT)}else{this._dispatch(Shuffle.EventType.LAYOUT)}this._queue.length=0}_startTransitions(transitions){this.isTransitioning=true;const callbacks=transitions.map((obj=>this._getTransitionFunction(obj)));parallel(callbacks,this._movementFinished.bind(this))}_cancelMovement(){this._transitions.forEach(cancelTransitionEnd);this._transitions.length=0;this.isTransitioning=false}_styleImmediately(objects){if(objects.length){const elements=objects.map((obj=>obj.item.element));Shuffle._skipTransitions(elements,(()=>{objects.forEach((obj=>{obj.item.applyCss(obj.styles);obj.callback()}))}))}}_movementFinished(){this._transitions.length=0;this.isTransitioning=false;this._dispatch(Shuffle.EventType.LAYOUT)}filter(category,sortOptions){if(!this.isEnabled){return}if(!category||category&&category.length===0){category=Shuffle.ALL_ITEMS}this._filter(category);this._shrink();this._updateItemCount();this.sort(sortOptions)}sort(sortOptions=this.lastSort){if(!this.isEnabled){return}this._resetCols();const items=sorter(this._getFilteredItems(),sortOptions);this.sortedItems=items;this._layout(items);this._processQueue();this._setContainerSize();this.lastSort=sortOptions}update({recalculateSizes:recalculateSizes=true,force:force=false}={}){if(this.isEnabled||force){if(recalculateSizes){this._setColumns()}this.sort()}}layout(){this.update({recalculateSizes:true})}add(newItems){const items=arrayUnique(newItems).map((el=>new ShuffleItem(el,this.options.isRTL)));this._initItems(items);this._resetCols();const allItems=this._mergeNewItems(items);const sortedItems=sorter(allItems,this.lastSort);const allSortedItemsSet=this._filter(this.lastFilter,sortedItems);const isNewItem=item=>items.includes(item);const applyHiddenState=item=>{item.scale=ShuffleItem.Scale.HIDDEN;item.isHidden=true;item.applyCss(ShuffleItem.Css.HIDDEN.before);item.applyCss(ShuffleItem.Css.HIDDEN.after)};const itemPositions=this._getNextPositions(allSortedItemsSet.visible);allSortedItemsSet.visible.forEach(((item,i)=>{if(isNewItem(item)){item.point=itemPositions[i];applyHiddenState(item);item.applyCss(this.getStylesForTransition(item,{}))}}));allSortedItemsSet.hidden.forEach((item=>{if(isNewItem(item)){applyHiddenState(item)}}));this.element.offsetWidth;this.setItemTransitions(items);this.items=this._mergeNewItems(items);this.filter(this.lastFilter)}disable(){this.isEnabled=false}enable(isUpdateLayout=true){this.isEnabled=true;if(isUpdateLayout){this.update()}}remove(elements){if(!elements.length){return}const collection=arrayUnique(elements);const oldItems=collection.map((element=>this.getItemByElement(element))).filter((item=>!!item));const handleLayout=()=>{this._disposeItems(oldItems);collection.forEach((element=>{element.parentNode.removeChild(element)}));this._dispatch(Shuffle.EventType.REMOVED,{collection:collection})};this._toggleFilterClasses({visible:[],hidden:oldItems});this._shrink(oldItems);this.sort();this.items=this.items.filter((item=>!oldItems.includes(item)));this._updateItemCount();this.once(Shuffle.EventType.LAYOUT,handleLayout)}getItemByElement(element){return this.items.find((item=>item.element===element))}resetItems(){this._disposeItems(this.items);this.isInitialized=false;this.items=this._getItems();this._initItems(this.items);this.once(Shuffle.EventType.LAYOUT,(()=>{this.setItemTransitions(this.items);this.isInitialized=true}));this.filter(this.lastFilter)}destroy(){this._cancelMovement();if(this._resizeObserver){this._resizeObserver.unobserve(this.element);this._resizeObserver=null}this.element.classList.remove("shuffle");this.element.removeAttribute("style");this._disposeItems(this.items);this.items.length=0;this.sortedItems.length=0;this._transitions.length=0;this.options.sizer=null;this.element=null;this.isDestroyed=true;this.isEnabled=false}static getSize(element,includeMargins=false){const styles=window.getComputedStyle(element,null);let width=getNumberStyle(element,"width",styles);let height=getNumberStyle(element,"height",styles);if(includeMargins){const marginLeft=getNumberStyle(element,"marginLeft",styles);const marginRight=getNumberStyle(element,"marginRight",styles);const marginTop=getNumberStyle(element,"marginTop",styles);const marginBottom=getNumberStyle(element,"marginBottom",styles);width+=marginLeft+marginRight;height+=marginTop+marginBottom}return{width:width,height:height}}static _skipTransitions(elements,callback){const zero="0ms";const data=elements.map((element=>{const{style:style}=element;const duration=style.transitionDuration;const delay=style.transitionDelay;style.transitionDuration=zero;style.transitionDelay=zero;return{duration:duration,delay:delay}}));callback();elements[0].offsetWidth;elements.forEach(((element,i)=>{element.style.transitionDuration=data[i].duration;element.style.transitionDelay=data[i].delay}))}}Shuffle.ShuffleItem=ShuffleItem;Shuffle.ALL_ITEMS="all";Shuffle.FILTER_ATTRIBUTE_KEY="groups";Shuffle.EventType={LAYOUT:"shuffle:layout",REMOVED:"shuffle:removed"};Shuffle.Classes=Classes;Shuffle.FilterMode={ANY:"any",ALL:"all"};Shuffle.options={group:Shuffle.ALL_ITEMS,speed:250,easing:"cubic-bezier(0.4, 0.0, 0.2, 1)",itemSelector:"*",sizer:null,gutterWidth:0,columnWidth:0,delimiter:null,buffer:0,columnThreshold:.01,initialSort:null,staggerAmount:15,staggerAmountMax:150,useTransforms:true,filterMode:Shuffle.FilterMode.ANY,isCentered:false,isRTL:false,roundTransforms:true};Shuffle.Point=Point;Shuffle.Rect=Rect;Shuffle.__sorter=sorter;Shuffle.__getColumnSpan=getColumnSpan;Shuffle.__getAvailablePositions=getAvailablePositions;Shuffle.__getShortColumn=getShortColumn;Shuffle.__getCenteredPositions=getCenteredPositions;export default Shuffle;