const path=require("path");const webpack=require("webpack");const WrapperPlugin=require("wrapper-webpack-plugin");const packageJson=require("./package.json");module.exports={entry:`${__dirname}/src/index.js`,output:{path:path.resolve(__dirname,"dist"),library:"BoxIconElement",libraryTarget:"umd",filename:"boxicons.js"},devtool:"source-map",module:{rules:[{test:/\.js$/,loader:"babel-loader",options:{babelrc:false,presets:[["env",{modules:false,targets:{uglify:true}}]],plugins:[["babel-plugin-transform-builtin-classes",{globals:["Array","Error","HTMLElement"]}]]}},{test:/\.css$/,use:[{loader:"to-string-loader"},{loader:"css-loader",options:{camelCase:true}}]}]},plugins:[new webpack.DefinePlugin({"BUILD.DATA":{VERSION:JSON.stringify(packageJson.version)}}),new WrapperPlugin({test:/boxicons\.js$/,header:getWrapper("header"),footer:getWrapper("footer")})]};function getWrapper(type){if(getWrapper.header){return getWrapper[type]}const templatePieces=`(function (\n    DEFAULT_CDN_PREFIX,   \n    STRING_WEB_COMPONENTS_REQUESTED,\n    WINDOW,\n    DOCUMENT,\n    init\n) {\n    /**\n     * A Custom Elements (Web Components) polyfill loader wrapper.\n     * Use it to wrap modules that use CEs and it will take care of\n     * only executing the module initialization function when the\n     * polyfill is loaded.\n     * This loader wrapper also loads the \`core-js\` library if it\n     * finds that he current environment does not support Promises\n     * (ex. IE)\n     *\n     * The loader contains default URLs for polyfills, however, these\n     * can be overwritten with the following globals:\n     *\n     * -    \`window.WEB_COMPONENTS_POLYFILL\`\n     * -    \`window.ES6_CORE_POLYFILL\`\n     *\n     * In addition, this loader will add the following global\n     * variable, which is used to store module initialization\n     * functions until the environment is patched:\n     *\n     * -    \`window.AWAITING_WEB_COMPONENTS_POLYFILL\`: an Array \n     *      with callbacks. To store a new one, use\n     *      \`window.AWAITING_WEB_COMPONENTS_POLYFILL.then(callbackHere)\`\n     */\n    if (!('customElements' in WINDOW)) {\n        \n        // If in the mist of loading the polyfills, then just add init to when that is done\n        if (WINDOW[STRING_WEB_COMPONENTS_REQUESTED]) {\n            WINDOW[STRING_WEB_COMPONENTS_REQUESTED].then(init);\n            return;\n        }\n        \n        var _WEB_COMPONENTS_REQUESTED = WINDOW[STRING_WEB_COMPONENTS_REQUESTED] = getCallbackQueue();\n        _WEB_COMPONENTS_REQUESTED.then(init);\n        \n        var WEB_COMPONENTS_POLYFILL = WINDOW.WEB_COMPONENTS_POLYFILL || "/" + "/" + DEFAULT_CDN_PREFIX + "/webcomponentsjs/2.0.2/webcomponents-bundle.js";\n        var ES6_CORE_POLYFILL = WINDOW.ES6_CORE_POLYFILL || "/" + "/" + DEFAULT_CDN_PREFIX + "/core-js/2.5.3/core.min.js";\n        \n        if (!("Promise" in WINDOW)) {\n            loadScript(ES6_CORE_POLYFILL)\n                .then(function () {\n                    loadScript(WEB_COMPONENTS_POLYFILL).then(function () {\n                      _WEB_COMPONENTS_REQUESTED.isDone = true;\n                      _WEB_COMPONENTS_REQUESTED.exec();\n                    });\n                });\n        } else {\n            loadScript(WEB_COMPONENTS_POLYFILL).then(function () {\n              _WEB_COMPONENTS_REQUESTED.isDone = true;\n              _WEB_COMPONENTS_REQUESTED.exec();\n            });\n        }\n    } else {\n        init();\n    }\n    \n    function getCallbackQueue() {\n        var callbacks = [];\n        callbacks.isDone = false;\n        callbacks.exec = function () {\n            callbacks.splice(0).forEach(function (callback) {\n                callback();\n            });\n        };\n        callbacks.then = function(callback){\n            if (callbacks.isDone) {\n                callback();\n            } else {\n                callbacks.push(callback);\n            }\n            return callbacks;\n        }\n        return callbacks;\n    }\n    \n    function loadScript (url) {\n        var callbacks = getCallbackQueue();\n        var script = DOCUMENT.createElement("script")\n        \n        script.type = "text/javascript";\n\n        if (script.readyState){ // IE\n            script.onreadystatechange = function(){\n                if (script.readyState == "loaded" || script.readyState == "complete"){\n                    script.onreadystatechange = null;\n                    callbacks.isDone = true;\n                    callbacks.exec();\n                }\n            };\n        } else {\n            script.onload = function(){\n                callbacks.isDone = true;\n                callbacks.exec();\n            };\n        }\n\n        script.src = url;\n        DOCUMENT.getElementsByTagName("head")[0].appendChild(script);\n        \n        script.then = callbacks.then;\n        return script;\n    }\n\n})(\n    "cdnjs.cloudflare.com/ajax/libs",\n    "AWAITING_WEB_COMPONENTS_POLYFILL",  // Global wait queue var name\n    window,\n    document,\n    function () {\n____SPLIT_HERE____\n    }\n);`.split("____SPLIT_HERE____");getWrapper.header=templatePieces[0];getWrapper.footer=templatePieces[1];return getWrapper[type]}