"use strict";var printWarning=function(){};if(process.env.NODE_ENV!=="production"){var ReactPropTypesSecret=require("./lib/ReactPropTypesSecret");var loggedTypeFailures={};var has=Function.call.bind(Object.prototype.hasOwnProperty);printWarning=function(text){var message="Warning: "+text;if(typeof console!=="undefined"){console.error(message)}try{throw new Error(message)}catch(x){}}}function checkPropTypes(typeSpecs,values,location,componentName,getStack){if(process.env.NODE_ENV!=="production"){for(var typeSpecName in typeSpecs){if(has(typeSpecs,typeSpecName)){var error;try{if(typeof typeSpecs[typeSpecName]!=="function"){var err=Error((componentName||"React class")+": "+location+" type `"+typeSpecName+"` is invalid; "+"it must be a function, usually from the `prop-types` package, but received `"+typeof typeSpecs[typeSpecName]+"`.");err.name="Invariant Violation";throw err}error=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,ReactPropTypesSecret)}catch(ex){error=ex}if(error&&!(error instanceof Error)){printWarning((componentName||"React class")+": type specification of "+location+" `"+typeSpecName+"` is invalid; the type checker "+"function must return `null` or an `Error` but returned a "+typeof error+". "+"You may have forgotten to pass an argument to the type checker "+"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and "+"shape all require an argument).")}if(error instanceof Error&&!(error.message in loggedTypeFailures)){loggedTypeFailures[error.message]=true;var stack=getStack?getStack():"";printWarning("Failed "+location+" type: "+error.message+(stack!=null?stack:""))}}}}}checkPropTypes.resetWarningCache=function(){if(process.env.NODE_ENV!=="production"){loggedTypeFailures={}}};module.exports=checkPropTypes;